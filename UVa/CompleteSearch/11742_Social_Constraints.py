
#arr = ['8 16','0 3 -6','5 6 -4','2 7 -2','3 6 1','0 3 -7','3 7 2','3 4 2','0 6 2','0 1 -7','1 2 -2','2 3 3','0 3 -6','2 4 7','3 6 -1','1 2 -3','4 5 -5','6 17','2 4 -4','4 5 -4','0 1 -4','1 3 -3','2 3 4','0 1 -5','1 3 -2','3 4 -4','0 4 5','3 4 5','0 1 4','1 3 -2','0 1 4','0 3 3','0 1 3','0 5 -3','0 2 -5','6 9','4 5 -2','2 4 -2','3 4 3','1 4 3','4 5 5','0 3 1','0 2 2','0 4 -1','2 5 5','1 0','7 3','0 1 2','0 1 2','0 1 1','7 4','0 5 -5','0 1 -5','0 6 5','5 6 2','5 5','0 1 -3','0 1 3','0 3 -3','0 2 1','1 3 4','2 4','0 1 -1','0 1 1','0 1 1','0 1 -1','4 5','0 3 2','0 2 -3','0 1 -2','2 3 2','0 2 3','1 0','5 8','3 4 4','2 4 3','0 3 -4','1 3 -4','1 4 3','1 2 -3','0 1 4','1 2 -3','3 15','0 1 -1','0 1 1','0 1 2','0 2 1','1 2 -1','0 2 -2','0 1 -2','0 1 -1','0 1 -2','1 2 1','0 1 2','0 1 1','0 2 -2','0 1 -2','0 1 2','7 15','0 2 -1','3 6 1','0 1 3','2 4 6','1 3 6','2 5 5','1 5 5','0 6 3','4 5 6','1 4 -1','3 4 -6','2 4 2','3 5 2','0 3 -1','0 2 6','5 4','2 3 1','1 3 2','0 2 1','1 4 -4','4 12','0 2 1','1 2 -2','0 2 -3','0 3 3','0 1 -2','0 1 3','1 2 2','1 2 1','0 2 -2','2 3 1','0 3 -3','2 3 3','4 6','0 2 3','1 3 -3','1 2 3','1 2 -2','0 2 -3','1 3 -1','3 2','0 2 1','1 2 2','1 0','4 11','1 2 -2','0 1 2','1 3 -2','0 1 1','0 2 1','0 3 3','0 2 1','0 3 -2','1 2 3','0 1 -1','0 1 1','2 2','0 1 1','0 1 -1','7 12','1 6 -5','4 5 1','0 1 -3','0 2 5','0 3 3','0 1 1','1 3 -6','2 3 6','1 5 2','1 6 -3','2 4 -5','0 1 -4','5 9','2 4 -2','1 4 -4','1 4 1','0 1 4','0 4 4','0 3 2','0 1 3','0 1 -1','0 1 3','4 12','0 2 -2','0 3 -2','0 2 -2','0 1 2','0 1 -2','0 1 1','0 1 1','0 3 -2','2 3 -2','0 3 -1','0 1 -3','0 3 1','7 10','2 3 -2','3 6 -4','0 1 1','0 2 4','0 3 4','0 2 -1','1 5 3','3 4 2','0 5 4','2 4 -2','6 16','0 2 1','0 2 1','1 2 -1','1 4 -5','1 5 4','1 2 5','3 4 -1','1 3 -1','0 4 1','2 5 -1','2 3 -4','3 4 -3','1 2 5','2 3 -4','0 4 -1','0 1 -2','7 0','2 15','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 -1','0 1 1','0 1 1','0 1 1','0 1 1','0 1 -1','0 1 1','0 1 1','0 1 -1','5 15','3 4 -3','0 3 -1','0 1 -2','1 4 1','1 4 -3','0 3 -3','1 3 2','2 3 -4','0 1 -3','2 3 4','1 3 4','0 2 -4','1 2 1','2 3 4','0 4 1','2 20','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 1','0 1 1','0 1 -1','0 1 1','0 1 -1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 -1','7 6','1 2 5','0 1 1','3 4 3','2 3 -2','5 6 5','2 3 -6','1 0','8 18','2 4 -1','2 3 -5','3 4 2','4 5 6','4 7 -3','2 3 -2','5 6 -7','0 3 -1','0 1 -4','2 6 4','0 1 -6','0 2 -6','1 7 -6','4 6 5','0 4 4','5 6 -1','0 1 -6','3 5 -6','5 11','0 3 1','1 2 -4','0 1 3','0 1 -4','2 3 -1','0 2 -3','2 3 -2','0 1 -1','1 3 1','2 3 -4','0 1 2','7 4','5 6 4','3 6 4','2 6 -4','0 5 -6','1 0','8 3','2 4 -7','0 2 -1','4 5 -6','2 19','0 1 -1','0 1 -1','0 1 1','0 1 -1','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 -1','0 1 1','0 1 -1','0 1 1','0 1 -1','0 1 -1','0 1 1','0 1 -1','7 7','4 5 -5','1 3 -4','1 4 5','0 5 2','1 3 -5','0 1 -1','1 3 -4','5 12','1 4 3','0 2 -3','0 1 4','1 3 2','0 1 -4','1 3 2','0 1 2','0 2 1','3 4 -1','3 4 -3','0 1 4','2 3 -1','7 7','1 2 -4','0 1 1','0 1 2','0 1 1','0 3 -5','0 4 -4','3 6 -6','7 17','1 5 3','2 4 6','2 3 4','4 5 -3','0 1 -3','1 2 -4','0 1 1','0 3 -3','1 2 -1','3 4 5','0 5 2','0 3 6','5 6 -6','0 2 2','3 4 5','4 6 -5','0 2 3','4 13','0 1 3','0 2 -3','0 1 -3','0 1 2','0 2 2','1 2 3','1 2 -3','0 2 1','0 2 -2','0 1 3','0 2 2','2 3 -3','1 2 -3','6 11','0 1 4','3 5 2','1 3 3','1 3 -1','1 4 4','1 3 5','0 3 -4','1 5 -4','1 4 1','0 2 4','1 3 -3','5 3','0 1 2','1 2 3','3 4 -1','2 15','0 1 -1','0 1 1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 1','5 3','1 2 1','2 4 -3','0 1 -4','4 1','1 2 -1','6 12','0 2 -4','0 4 4','0 4 -4','0 1 1','0 2 1','1 3 -1','1 5 4','0 1 -1','3 5 2','0 2 -4','3 4 2','2 4 5','7 8','2 3 2','3 5 1','0 4 -1','2 3 -3','0 5 1','0 4 3','5 6 -6','0 1 1','2 4','0 1 1','0 1 1','0 1 1','0 1 1','3 14','0 2 -2','0 2 -1','0 1 2','1 2 1','0 1 1','1 2 -1','0 1 2','0 1 1','1 2 1','0 1 -2','0 2 -2','1 2 -2','1 2 2','0 1 2','2 0','5 14','0 2 -2','0 3 -4','0 1 1','0 1 -4','0 3 1','0 3 3','3 4 3','2 4 -4','2 3 -4','1 3 -1','0 2 2','0 4 2','1 4 -4','1 2 -2','2 16','0 1 -1','0 1 -1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 1','2 5','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 1','6 7','2 3 1','1 2 -2','1 2 3','4 5 4','0 2 -3','1 3 -1','1 4 2','4 15','0 1 2','2 3 -2','0 3 -3','0 1 3','2 3 -1','0 2 -3','0 1 -1','1 2 -1','0 2 2','0 3 -3','0 2 -1','0 1 -3','0 3 -2','1 2 -1','0 1 -2','4 2','1 2 -3','1 3 2','4 3','0 1 -2','0 2 -3','0 2 -3','4 17','2 3 -2','0 2 -1','1 2 1','0 2 1','0 1 1','0 1 3','1 2 3','0 2 2','0 1 -2','0 1 2','0 1 1','1 2 3','2 3 -1','1 2 -3','0 1 3','0 1 -3','1 2 -3','1 0','4 0','8 1','1 2 1','5 1','1 2 -1','5 1','1 4 -4','2 9','0 1 1','0 1 -1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 -1','0 1 1','7 19','3 4 4','0 5 -6','3 5 5','0 6 3','1 5 6','1 4 -4','3 5 2','3 4 -1','0 5 5','0 1 -6','1 3 4','0 5 -3','2 4 -4','0 6 3','0 3 4','0 5 -4','1 4 4','1 2 6','2 6 5','6 16','2 4 -5','0 2 -1','0 2 -2','0 3 -5','1 2 4','2 3 -5','1 2 -1','4 5 1','0 1 4','3 4 -2','0 3 -4','0 1 5','3 4 3','4 5 -4','0 1 4','0 5 -5','6 11','0 4 -4','2 3 -4','1 3 -2','1 2 -1','4 5 1','1 2 5','3 5 3','3 4 -5','2 3 5','0 1 1','0 4 4','8 11','2 4 -5','0 2 3','0 7 7','1 2 -4','6 7 3','4 7 3','0 1 2','2 3 2','3 5 -5','0 4 -5','1 5 -7','1 0','5 3','1 2 -4','0 2 -1','1 2 -4','8 0','1 0','3 11','0 2 2','0 1 2','0 1 -2','1 2 2','1 2 1','0 1 1','0 1 -1','0 2 -2','1 2 1','0 1 1','0 1 -2','6 8','0 2 3','2 3 1','3 5 5','0 2 5','4 5 -2','2 4 4','1 5 1','1 2 1','6 5','0 1 1','0 2 -1','0 4 -2','3 4 4','1 2 2','5 13','0 1 -1','1 3 -1','0 1 1','0 1 3','0 2 2','0 1 3','0 2 -3','1 2 4','0 1 -1','0 4 -3','3 4 4','1 4 -1','1 2 1','2 14','0 1 1','0 1 -1','0 1 1','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 -1','0 1 1','0 1 -1','0 1 -1','0 1 -1','7 5','0 3 -3','2 6 -4','0 2 -4','2 4 3','1 3 -5','8 14','4 5 3','1 3 2','1 5 7','0 1 6','4 6 -4','2 6 7','2 5 -6','6 7 -7','2 7 2','0 2 1','3 5 -4','0 1 5','2 3 -5','0 2 3','7 5','3 6 1','1 2 -3','2 5 1','1 5 1','1 3 6','3 4','0 1 -1','0 1 -2','0 1 1','1 2 -1','5 13','2 3 -4','0 1 -4','0 1 4','0 2 -2','1 3 4','0 4 4','0 2 4','0 3 4','3 4 2','0 1 4','2 3 1','1 4 2','0 3 3','2 14','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 1','0 1 -1','0 1 -1','0 1 -1','0 1 -1','0 1 -1','2 3','0 1 -1','0 1 -1','0 1 1','7 8','0 1 -4','4 5 -5','2 6 -3','1 2 1','1 3 3','1 4 -1','1 2 3','0 1 1','3 1','1 2 2','6 8','0 5 3','2 3 2','0 1 5','0 2 3','0 1 -1','0 1 1','0 2 3','3 4 4','8 1','0 3 -1','8 7','3 4 -1','3 6 4','3 6 1','0 3 -3','1 4 -4','3 5 7','1 5 -1','7 17','3 6 4','1 2 -3','1 3 -4','0 2 1','4 5 -3','0 1 2','0 3 -6','0 1 3','2 4 -3','2 4 3','0 1 1','4 6 -5','2 5 -1','0 1 -4','1 2 3','1 2 -3','2 4 -1','5 18','0 2 4','0 2 4','0 1 -3','0 2 2','0 4 1','1 2 3','1 2 4','1 2 2','0 4 -3','0 1 3','0 2 4','1 2 -3','0 2 4','0 2 -1','0 2 2','2 4 3','0 3 -4','1 3 -4','7 16','3 4 1','3 6 -6','0 1 1','1 3 4','4 6 4','1 6 6','0 6 5','1 3 3','0 4 -1','1 4 -2','5 6 6','0 4 -5','0 5 -6','0 1 2','1 2 3','0 5 5','1 0','1 0','1 0','3 19','0 2 -1','1 2 1','0 2 -2','0 1 1','0 1 -1','0 1 -1','1 2 2','1 2 -1','0 2 -2','1 2 -2','0 2 1','0 1 -1','0 2 1','0 2 -1','0 1 2','0 1 1','1 2 -2','0 1 1','0 1 -2','7 15','2 4 3','1 2 3','0 1 3','2 4 6','2 4 -5','0 2 5','0 5 5','0 2 -5','0 3 -5','1 5 -6','3 5 6','0 5 -4','3 4 -1','1 5 -2','0 1 2','5 17','0 1 -3','0 3 -3','0 1 1','0 4 -1','2 3 1','0 2 -1','1 3 1','0 2 1','0 1 2','2 3 -2','1 2 1','0 2 -2','1 2 -4','3 4 1','0 4 -1','0 1 3','3 4 -1','0 0']
# arr = ['3 1','0 1 -2','3 0','0 0']
# arr = ['8 16', '0 3 -6', '5 6 -4', '2 7 -2', '3 6 1', '0 3 -7', '3 7 2', '3 4 2', '0 6 2', '0 1 -7', '1 2 -2', '2 3 3',
#        '0 3 -6', '2 4 7', '3 6 -1', '1 2 -3', '4 5 -5', '0 0']
arr = ['8 0','8 1','0 1 -2','8 2','0 1 -1','0 1 -2','8 3','0 1 6','0 1 5','0 1 -2','0 0']
arr = iter(arr)
import math


# we want to find the count of permutations where all constraints are satisfied
def main():
    while True:
        #n, m = map(int, next(arr).split())
        n, m = map(int, input().split())
        if n == 0 and m == 0:
            break
        total = math.factorial(n)
        if m == 0:
            print(total)
            continue

        constraints = []
        for _ in range(m):
            #a, b, c = map(int, next(arr).split())
            a, b, c = map(int, input().split())
            constraints.append([a,b,c])

        people = list(range(n))
        count = 0
        for _ in range(total):
            all_ok = True
            permute(people)
            for a,b,c in constraints:
                dif = abs(people.index(a) - people.index(b))
                if c > 0:
                    all_ok = dif <= c
                elif c < 0:
                    all_ok = dif >= abs(c)

                if not all_ok:
                    break
            if all_ok:
                count+=1
        print(count)


def permute(arr):
    i = len(arr) - 2

    while i >= 0 and arr[i] > arr[i + 1]:
        i -= 1

    if i < 0:
        arr.reverse()
        return

    j = len(arr) - 1
    while i < j and arr[i] > arr[j]:
        j -= 1

    arr[i], arr[j] = arr[j], arr[i]

    lo = i + 1
    hi = len(arr) - 1
    while lo < hi:
        arr[lo], arr[hi] = arr[hi], arr[lo]
        lo += 1
        hi -= 1


if __name__ == '__main__':
    main()
    # a = [1,2,3]
    # for _ in range(math.factorial(len(a))):
    #     permute(a)
    #     print(a)
