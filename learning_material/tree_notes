■ The number of branches B in a binary tree containing N nodes is B = N – 1.
 ■ The number of nodes N in a perfect binary tree of height H is N = 2 H+1  – 1.
 ■ Conversely, if a perfect binary tree contains N nodes, it has a height of
log
2
(N + 1) – 1.
 ■ The number of leaf nodes L in a perfect binary tree of height H is L = 2 H .
Because the total number of nodes in a perfect binary tree of height H
is 2 H+1  – 1, the number of internal nodes I is I = N – L = (2 H+1  – 1) – 2 H  =
(2 H+1  – 2 H ) – 1 = 2 H  × (2 – 1) – 1 = 2 H  – 1.
 ■ This means that in a perfect binary tree, almost exactly half of the nodes are
leaves and almost exactly half are internal nodes. More precisely, I = L – 1.
 ■ The number of missing branches (places where a child could be added)
M in a binary tree that contains N nodes is M = N + 1.
 ■ If a binary tree has N
0
 leaf nodes and N
2
 nodes with degree 2, N
0
 = N
2
 + 1.
In other words, there is one more leaf node than nodes with degree 2.